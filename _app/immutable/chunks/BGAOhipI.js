import{a as s}from"./BXQQiVcS.js";import{s as l}from"./gt9WcTCj.js";import{g as u}from"./DJxVeldX.js";async function f(t){const e=await s.get(`/api/upload-url?type=${t}`);if(!e.ok)throw new Error("Failed to get upload URL");return e}function g(t,e,r){return new Promise((a,n)=>{const o=new XMLHttpRequest;o.open("PUT",t),o.setRequestHeader("Content-Type",e.type),o.upload.onprogress=i=>{if(i.lengthComputable){const p=i.loaded/i.total*100;r(p)}},o.onload=()=>{o.status>=200&&o.status<300?(r(100),a()):n(new Error(`File upload failed: ${o.statusText}`))},o.onerror=()=>{n(new Error("File upload failed due to a network error."))},o.send(e)})}async function y(t){const e=await s.post("/api/persona/edit",t);if(!e.ok){const a=await e.json();throw new Error(a.message||"Failed to save persona")}return(await e.json()).ID}async function h(t){const e=await s.get2(`/api/persona?id=${t}&locale=${u(l).language}`);if(!e.ok)throw new Error("Failed to load persona");return await e.json()}async function m(t){const e=await s.get2(`/api/persona?id=${t}`);if(!e.ok)throw new Error("Failed to load persona");return await e.json()}async function k(t){const e=t.map(async r=>{try{const a=await fetch(r.url,{method:"HEAD"});if(!a.ok)return{...r,type:"unknown"};const n=a.headers.get("Content-Type");let o="unknown";return n?.startsWith("image/")?o="image":n?.startsWith("video/")&&(o="video"),{...r,type:o}}catch(a){return console.error("Error fetching metadata for:",r.url,a),{...r,type:"unknown"}}});return await Promise.all(e)}export{m as a,k as f,f as g,h as l,y as s,g as u};
